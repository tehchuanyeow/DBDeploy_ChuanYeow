/*
Deployment script for Database_Deploy_CY

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar LoadTestData "true"
:setvar DatabaseName "Database_Deploy_CY"
:setvar DefaultFilePrefix "Database_Deploy_CY"
:setvar DefaultDataPath ""
:setvar DefaultLogPath ""

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
IF EXISTS (SELECT 1
           FROM   [sys].[databases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [sys].[databases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
PRINT N'Creating [dbo].[Author]...';


GO
CREATE TABLE [dbo].[Author] (
    [AuthorID]        INT           NOT NULL,
    [AuthorFirstName] VARCHAR (20)  NOT NULL,
    [AuthorLastName]  VARCHAR (20)  NOT NULL,
    [AuthorTFN]       INT           NOT NULL,
    [ISBN]            NVARCHAR (30) NOT NULL,
    PRIMARY KEY CLUSTERED ([AuthorID] ASC)
);


GO
PRINT N'Creating [dbo].[Book]...';


GO
CREATE TABLE [dbo].[Book] (
    [ISBN]          NVARCHAR (30) NOT NULL,
    [Title]         VARCHAR (30)  NOT NULL,
    [YearPublished] INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([ISBN] ASC)
);


GO
PRINT N'Creating [dbo].[BookTransaction]...';


GO
CREATE TABLE [dbo].[BookTransaction] (
    [BorrowingCard] NVARCHAR (20) NOT NULL,
    [ISBN]          NVARCHAR (30) NOT NULL,
    [StudentID]     NVARCHAR (10) NOT NULL,
    [AuthorID]      INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([BorrowingCard] ASC)
);


GO
PRINT N'Creating [dbo].[Students]...';


GO
CREATE TABLE [dbo].[Students] (
    [StudentID]     NVARCHAR (10) NOT NULL,
    [FName]         VARCHAR (20)  NOT NULL,
    [LName]         VARCHAR (20)  NOT NULL,
    [Email]         VARCHAR (50)  NOT NULL,
    [Mobile]        INT           NOT NULL,
    [BorrowingCard] NVARCHAR (20) NOT NULL,
    PRIMARY KEY CLUSTERED ([StudentID] ASC)
);


GO
PRINT N'Creating [dbo].[FK_StudentID]...';


GO
ALTER TABLE [dbo].[BookTransaction] WITH NOCHECK
    ADD CONSTRAINT [FK_StudentID] FOREIGN KEY ([StudentID]) REFERENCES [dbo].[Students] ([StudentID]);


GO
PRINT N'Creating [dbo].[BookAuthorID]...';


GO
ALTER TABLE [dbo].[BookTransaction] WITH NOCHECK
    ADD CONSTRAINT [BookAuthorID] FOREIGN KEY ([AuthorID]) REFERENCES [dbo].[Author] ([AuthorID]);


GO
PRINT N'Creating [dbo].[FK_BorrowingCard]...';


GO
ALTER TABLE [dbo].[Students] WITH NOCHECK
    ADD CONSTRAINT [FK_BorrowingCard] FOREIGN KEY ([BorrowingCard]) REFERENCES [dbo].[BookTransaction] ([BorrowingCard]);


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

IF '$(LoadTestData)' = 'true'

BEGIN

DELETE FROM Book;
DELETE FROM Students;

INSERT INTO Students (StudentID, FName, LName, Email, Mobile) VALUES
('S12345678', 'Fred', 'Flintstone', '12345678@student.swin.edu.au', 0400555111);

INSERT INTO Book (ISBN, Title, YearPublished) VALUES
(978-3-16-148410-0, 'Relationships with Databases, the ins and outs', 1970);

INSERT INTO Author (AuthorID, AuthorFirstName, AuthorLastName, AuthorTFN) VALUES
(32567, 'Edgar', 'Codd', 150111222);

INSERT INTO BookTransaction (BorrowingCard) VALUES
('borrowed');

END;
GO

GO
