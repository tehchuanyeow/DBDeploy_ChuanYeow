/*
Deployment script for Database_Deploy_CY

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar LoadTestData "true"
:setvar DatabaseName "Database_Deploy_CY"
:setvar DefaultFilePrefix "Database_Deploy_CY"
:setvar DefaultDataPath ""
:setvar DefaultLogPath ""

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
/*
The type for column ISBN in table [dbo].[Author] is currently  NVARCHAR (30) NOT NULL but is being changed to  VARCHAR (30) NOT NULL. Data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[Author])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The type for column ISBN in table [dbo].[Book] is currently  NVARCHAR (30) NOT NULL but is being changed to  INT NOT NULL. Data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[Book])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The column AuthorID on table [dbo].[Students] must be changed from NULL to NOT NULL. If the table contains data, the ALTER script may not work. To avoid this issue, you must add values to this column for all rows or mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.
*/

IF EXISTS (select top 1 1 from [dbo].[Students])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Dropping [dbo].[FK_AuthorID]...';


GO
ALTER TABLE [dbo].[Students] DROP CONSTRAINT [FK_AuthorID];


GO
PRINT N'Altering [dbo].[Author]...';


GO
ALTER TABLE [dbo].[Author] ALTER COLUMN [ISBN] VARCHAR (30) NOT NULL;


GO
PRINT N'Starting rebuilding table [dbo].[Book]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Book] (
    [ISBN]          INT          NOT NULL,
    [Title]         VARCHAR (50) NOT NULL,
    [YearPublished] INT          NOT NULL,
    PRIMARY KEY CLUSTERED ([ISBN] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Book])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Book] ([ISBN], [Title], [YearPublished])
        SELECT   [ISBN],
                 [Title],
                 [YearPublished]
        FROM     [dbo].[Book]
        ORDER BY [ISBN] ASC;
    END

DROP TABLE [dbo].[Book];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Book]', N'Book';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Altering [dbo].[Students]...';


GO
ALTER TABLE [dbo].[Students] ALTER COLUMN [AuthorID] INT NOT NULL;


GO
PRINT N'Creating [dbo].[FK_AuthorID]...';


GO
ALTER TABLE [dbo].[Students] WITH NOCHECK
    ADD CONSTRAINT [FK_AuthorID] FOREIGN KEY ([AuthorID]) REFERENCES [dbo].[Author] ([AuthorID]);


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

IF '$(LoadTestData)' = 'true'

BEGIN

DELETE FROM Book;
DELETE FROM BookTransaction;
DELETE FROM Students;
DELETE FROM Author;

INSERT INTO BookTransaction (BorrowingCard) VALUES
('borrowed');

INSERT INTO Author (AuthorID, AuthorFirstName, AuthorLastName, AuthorTFN, ISBN) VALUES
(32567, 'Edgar', 'Codd', 150111222, 978-3-16-148410-0);

INSERT INTO Students (StudentID, FName, LName, Email, Mobile, BorrowingCard, AuthorID) VALUES
('S12345678', 'Fred', 'Flintstone', '12345678@student.swin.edu.au', 0400555111, 'borrowed', 32567);

INSERT INTO Book (ISBN, Title, YearPublished) VALUES
(978-3-16-148410-0, 'Relationships with Databases, the ins and outs', 1970);

END;
GO

GO
